"""added_rbac_and_changed_multiple_tables

Revision ID: 55f55c3df521
Revises: 477ead5c3cc0
Create Date: 2025-03-27 14:41:21.286559

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision: str = '55f55c3df521'
down_revision: Union[str, None] = '477ead5c3cc0'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # Verificar y eliminar las restricciones si existen
    try:
        op.drop_constraint('user_company_role_rel_ibfk_3', 'user_company_role_rel', type_='foreignkey')
    except Exception:
        pass  # Si la restricción no existe, continúa

    # Verificar y eliminar las tablas si existen
    # Utiliza el inspector para verificar la existencia de las tablas
    conn = op.get_bind()
    inspector = sa.inspect(conn)
    
    # Función auxiliar para eliminar una tabla si existe
    def drop_table_if_exists(table_name):
        if table_name in inspector.get_table_names():
            op.drop_table(table_name)
    
    # Intentar eliminar cada tabla, ignorando errores si no existen
    drop_table_if_exists('role_allowance_rel')
    drop_table_if_exists('temp_role_mapping')
    drop_table_if_exists('role_company_rel')
    drop_table_if_exists('allowances')
    
    # Continuar con el resto de las operaciones
    op.drop_constraint('clock_in_ibfk_2', 'clock_in', type_='foreignkey')
    op.create_foreign_key(None, 'clock_in', 'user', ['user_id'], ['id'])
    op.drop_constraint('department_ibfk_2', 'department', type_='foreignkey')
    op.create_foreign_key(None, 'department', 'user', ['department_head_id'], ['id'])


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_foreign_key('user_company_role_rel_ibfk_3', 'user_company_role_rel', 'role_company_rel', ['role_id'], ['role_id'])
    op.drop_constraint(None, 'department', type_='foreignkey')
    op.create_foreign_key('department_ibfk_2', 'department', 'user_company_role_rel', ['department_head_id'], ['user_id'])
    op.drop_constraint(None, 'clock_in', type_='foreignkey')
    op.create_foreign_key('clock_in_ibfk_2', 'clock_in', 'user_company_role_rel', ['user_id'], ['user_id'])
    op.create_table('allowances',
    sa.Column('id', mysql.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', mysql.VARCHAR(length=20), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    mysql_collate='utf8mb4_0900_ai_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    op.create_table('role_company_rel',
    sa.Column('role_id', mysql.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', mysql.VARCHAR(length=15), nullable=False),
    sa.Column('company_id', mysql.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['company_id'], ['company.id'], name='role_company_rel_ibfk_1'),
    sa.PrimaryKeyConstraint('role_id', 'company_id'),
    mysql_collate='utf8mb4_0900_ai_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    op.create_table('temp_role_mapping',
    sa.Column('old_role_id', mysql.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('company_id', mysql.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('new_role_id', mysql.INTEGER(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('old_role_id', 'company_id'),
    mysql_collate='utf8mb4_0900_ai_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    op.create_table('role_allowance_rel',
    sa.Column('role_id', mysql.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('allowance_id', mysql.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['allowance_id'], ['allowances.id'], name='role_allowance_rel_ibfk_2'),
    sa.ForeignKeyConstraint(['role_id'], ['role_company_rel.role_id'], name='role_allowance_rel_ibfk_1'),
    sa.PrimaryKeyConstraint('role_id', 'allowance_id'),
    mysql_collate='utf8mb4_0900_ai_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    # ### end Alembic commands ###
