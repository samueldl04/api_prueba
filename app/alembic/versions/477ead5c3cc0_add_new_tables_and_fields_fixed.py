"""add_new_tables_and_fields_fixed

Revision ID: 477ead5c3cc0
Revises: 
Create Date: 2025-03-26 11:18:02.968641

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision: str = '477ead5c3cc0'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('app_config', sa.Column('created_at', sa.DateTime(), nullable=True))
    op.add_column('app_config', sa.Column('updated_at', sa.DateTime(), nullable=True))
    op.alter_column('app_config', 'config_section',
               existing_type=mysql.VARCHAR(length=50),
               nullable=True)
    op.alter_column('app_config', 'is_system',
               existing_type=mysql.TINYINT(display_width=1),
               nullable=True)
    op.alter_column('clock_in', 'details',
               existing_type=mysql.VARCHAR(length=100),
               nullable=True)
    op.alter_column('clock_in', 'log_date',
               existing_type=mysql.DATETIME(),
               type_=sa.Date(),
               existing_nullable=False)
    op.add_column('company', sa.Column('website', sa.String(length=100), nullable=True))
    op.add_column('company', sa.Column('industry', sa.String(length=50), nullable=True))
    op.add_column('company', sa.Column('foundation_date', sa.Date(), nullable=True))
    op.add_column('company', sa.Column('tax_id', sa.String(length=20), nullable=True))
    op.add_column('company', sa.Column('company_size', sa.String(length=20), nullable=True))
    op.add_column('company', sa.Column('timezone', sa.String(length=50), nullable=True))
    op.drop_index('ix_company_name', table_name='company')
    op.create_index(op.f('ix_company_name'), 'company', ['name'], unique=False)
    op.create_index(op.f('ix_company_reference_name'), 'company', ['reference_name'], unique=False)
    op.add_column('user', sa.Column('job_title', sa.String(length=100), nullable=True))
    op.add_column('user', sa.Column('date_of_birth', sa.Date(), nullable=True))
    op.add_column('user', sa.Column('employee_id', sa.String(length=20), nullable=True))
    op.add_column('user', sa.Column('hire_date', sa.Date(), nullable=True))
    op.add_column('user', sa.Column('emergency_contact', sa.String(length=100), nullable=True))
    op.add_column('user', sa.Column('emergency_phone', sa.String(length=20), nullable=True))
    op.alter_column('user', 'modify_password',
               existing_type=mysql.TINYINT(display_width=1),
               server_default=None,
               existing_nullable=False)
    op.create_unique_constraint(None, 'user', ['employee_id'])
    op.add_column('user_company_role_rel', sa.Column('schedule_id', sa.Integer(), nullable=True))
    op.add_column('user_company_role_rel', sa.Column('location_id', sa.Integer(), nullable=True))
    op.add_column('user_company_role_rel', sa.Column('position', sa.String(length=100), nullable=True))
    op.add_column('user_company_role_rel', sa.Column('supervisor_id', sa.Integer(), nullable=True))
    op.add_column('user_company_role_rel', sa.Column('start_date', sa.Date(), nullable=True))
    op.add_column('user_company_role_rel', sa.Column('end_date', sa.Date(), nullable=True))
    op.alter_column('user_company_role_rel', 'clock_in_status',
               existing_type=mysql.ENUM('ACTIVE', 'IDLE', 'PAUSE', charset='utf8mb4', collation='utf8mb4_0900_ai_ci'),
               server_default=None,
               existing_nullable=False)
    op.create_foreign_key(None, 'user_company_role_rel', 'location', ['location_id'], ['id'])
    op.create_foreign_key(None, 'user_company_role_rel', 'schedule', ['schedule_id'], ['id'])
    op.create_foreign_key(None, 'user_company_role_rel', 'user', ['supervisor_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'user_company_role_rel', type_='foreignkey')
    op.drop_constraint(None, 'user_company_role_rel', type_='foreignkey')
    op.drop_constraint(None, 'user_company_role_rel', type_='foreignkey')
    op.alter_column('user_company_role_rel', 'clock_in_status',
               existing_type=mysql.ENUM('ACTIVE', 'IDLE', 'PAUSE', charset='utf8mb4', collation='utf8mb4_0900_ai_ci'),
               server_default=sa.text("'IDLE'"),
               existing_nullable=False)
    op.drop_column('user_company_role_rel', 'end_date')
    op.drop_column('user_company_role_rel', 'start_date')
    op.drop_column('user_company_role_rel', 'supervisor_id')
    op.drop_column('user_company_role_rel', 'position')
    op.drop_column('user_company_role_rel', 'location_id')
    op.drop_column('user_company_role_rel', 'schedule_id')
    op.drop_constraint(None, 'user', type_='unique')
    op.alter_column('user', 'modify_password',
               existing_type=mysql.TINYINT(display_width=1),
               server_default=sa.text("'0'"),
               existing_nullable=False)
    op.drop_column('user', 'emergency_phone')
    op.drop_column('user', 'emergency_contact')
    op.drop_column('user', 'hire_date')
    op.drop_column('user', 'employee_id')
    op.drop_column('user', 'date_of_birth')
    op.drop_column('user', 'job_title')
    op.drop_index(op.f('ix_company_reference_name'), table_name='company')
    op.drop_index(op.f('ix_company_name'), table_name='company')
    op.create_index('ix_company_name', 'company', ['reference_name'], unique=False)
    op.drop_column('company', 'timezone')
    op.drop_column('company', 'company_size')
    op.drop_column('company', 'tax_id')
    op.drop_column('company', 'foundation_date')
    op.drop_column('company', 'industry')
    op.drop_column('company', 'website')
    op.alter_column('clock_in', 'log_date',
               existing_type=sa.Date(),
               type_=mysql.DATETIME(),
               existing_nullable=False)
    op.alter_column('clock_in', 'details',
               existing_type=mysql.VARCHAR(length=100),
               nullable=False)
    op.alter_column('app_config', 'is_system',
               existing_type=mysql.TINYINT(display_width=1),
               nullable=False)
    op.alter_column('app_config', 'config_section',
               existing_type=mysql.VARCHAR(length=50),
               nullable=False)
    op.drop_column('app_config', 'updated_at')
    op.drop_column('app_config', 'created_at')
    # ### end Alembic commands ###
